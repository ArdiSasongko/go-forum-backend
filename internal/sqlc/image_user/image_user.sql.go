// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: image_user.sql

package imageuser

import (
	"context"
)

const createImage = `-- name: CreateImage :exec
INSERT INTO images_user (user_id, image_url) VALUES ($1, $2)
`

type CreateImageParams struct {
	UserID   int32
	ImageUrl string
}

func (q *Queries) CreateImage(ctx context.Context, arg CreateImageParams) error {
	_, err := q.db.ExecContext(ctx, createImage, arg.UserID, arg.ImageUrl)
	return err
}

const deleteImage = `-- name: DeleteImage :exec
DELETE FROM images_user WHERE user_id = $1
`

func (q *Queries) DeleteImage(ctx context.Context, userID int32) error {
	_, err := q.db.ExecContext(ctx, deleteImage, userID)
	return err
}

const getImage = `-- name: GetImage :one
SELECT id, user_id, image_url, created_at, updated_at FROM images_user WHERE user_id = $1
`

func (q *Queries) GetImage(ctx context.Context, userID int32) (ImagesUser, error) {
	row := q.db.QueryRowContext(ctx, getImage, userID)
	var i ImagesUser
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.ImageUrl,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const updateImage = `-- name: UpdateImage :exec
UPDATE images_user SET image_url = $2 WHERE user_id = $1
`

type UpdateImageParams struct {
	UserID   int32
	ImageUrl string
}

func (q *Queries) UpdateImage(ctx context.Context, arg UpdateImageParams) error {
	_, err := q.db.ExecContext(ctx, updateImage, arg.UserID, arg.ImageUrl)
	return err
}
